*,
*::before,
*::after {
  box-sizing: border-box;
}

[data-drag-drop-preview] {
  position: absolute;
  left: -100lvw;
  top: -100lvh;
  background-color: black;
  padding: 2ch;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;

  .name {
    margin: 0;
    width: 100%;
    height: 100%;
    background-color: black;
    color: white;
    font-weight: bold;
  }
}

.treefactor {
  --border-width: 1px;

  margin: 1ch;

  button {
    font-size: var(--fs-default);
    display: block;
    margin-inline: auto;
    margin-block: 0.5em;
  }

  h1,
  h2 {
    margin-inline: auto;
    text-align: center;
  }

  .init {
    margin-inline: auto;
    max-width: 800px;

    textarea {
      display: block;
      width: -webkit-fill-available;
      min-height: 50svh;
      resize: vertical;
    }

    .tree-error {
      width: fit-content;
      margin-inline: auto;
      padding: 1ch;
      background-color: var(--warn);
      color: var(--on-warn);

      p {
        margin-block: 0;
      }

      &:empty {
        display: none;
      }
    }
  }

  .editor {
    --workspace-split: 1fr 1fr;

    display: grid;
    grid-template-columns: var(--workspace-split);
    grid-template-rows: 1fr;
    gap: 1ch;
    margin-inline: 1ch;

    @media (width < 800px) {
      grid-template-columns: 1fr;
      grid-template-rows: var(--workspace-split);
    }
  }

  .options {
    display: flex;
    flex-flow: row wrap;
    width: fit-content;
    margin-inline: auto;
    gap: 2ch;
    justify-content: center;
    padding: 2ch;

    .checkbox-wrapper {
      display: flex;
      flex-flow: row nowrap;
      gap: 0.5ch;
      align-items: center;
    }
  }

  .tree {
    border: 1px solid #393939;
    border-radius: 1ch;
    background-color: black;
    padding: 2ch;
    overflow: hidden;
    max-width: 100%;

    &[data-editable="true"] {
      background-color: #151515;
    }

    > * {
      user-select: none;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    > .name {
      cursor: default;
      font-size: var(--fs-large);
    }

    .directory,
    .file {
      position: relative;
      width: fit-content;
      min-width: 16ch;
      padding-inline: 1ch;
      border-radius: 0.5ch;
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;

      &::before {
        content: "";
        position: absolute;
        background-color: var(--color);
        width: var(--border-width);
        height: 100%;
        top: 0;
        left: 0;
      }
    }

    .directory {
      --color: #9b9b9b;

      &[data-is-summary="false"] {
        margin-block: 0.5em;
        padding: 1ch;
      }

      > .name {
        font-weight: bold;
      }
    }

    .file {
      --color: #d7d7d7;

      > .name {
        font-weight: lighter;
      }
    }

    .file-summary {
      font-size: var(--fs-small);
      margin-inline-end: 1ch;
      padding: 0.15em 0.5ch;
      background-color: var(--hover);
    }
  }

  .row {
    display: flex;
    flex-flow: row nowrap;
    gap: 1ch;
    align-items: baseline;
  }

  .labels {
    font-size: var(--fs-small);
    text-overflow: ellipsis;
    overflow-x: hidden;
    max-width: 32ch;
  }

  .report {
    display: flex;
    flex-flow: row wrap;
    gap: 1ch;
    justify-content: center;
  }

  [draggable="true"] {
    cursor: grab;
    transition: background-color 200ms;

    &:not(:has([draggable="true"]:hover)):hover {
      // Highlight only the element under the pointer, not any parents.
      --color: var(--vibrant);
      --border-width: 2px;

      background-color: var(--hover);
    }
  }

  [data-is-drop-target] {
    outline: var(--border-width) solid #ffffff;
  }

  [data-droppable-state="success"] {
    // important to force override of :hover.
    background-color: var(--green) !important;
  }

  [data-droppable-state="failure"] {
    // important to force override of :hover.
    background-color: var(--red) !important;
  }
}
